<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">
   <!-- <select id="findUser" resultType="com.entity.User">
        select id,username,password
        from user
        where id = #{id}
    </select>

    <select id="getAll" resultType="com.entity.User">
        select u.*, r.name
        from user u
                 inner join user_role ur on u.id = ur.user_id
                 inner join role r on ur.role_id = r.id
    </select>

    <select id="getRoles" resultType="com.entity.RoleEntity">
        select r.*
        from roleEntity r,
             userrole ur
        where ur.userId = #{userId}
          and r.id = ur.roleId
    </select>

    <select id="findUserByUsernameAndPassword" resultType="com.entity.User">
        select username,password
        from user
        where username = #{username}
          and password = #{password}
    </select>

    <update id="updateRole">
        delete from userrole where userId = ?
    </update>

    <insert id="addUser">
        insert into user(username, password) values(#{username},#{password})
    </insert>

    <delete id="deleteRolesByUserId">
        delete from user_role where user_id = #{userId}
    </delete>

    <insert id="insertUserRole">
        insert into user_role (user_id,role_id) values(#{userId},#{roleId})
    </insert>-->


    <select id="LoginAll" resultType="com.entity.User">
        select mUsername, mPassword from user
        where mUsername=#{mUsername} and mPassword=#{mPassword}
    </select>
    <select id="getAllManager" resultType="com.entity.User">
       select mId,mName,mPhone,mUsername,r.name as name from user left join role r on user.role = r.id
       order by mId
    </select>
    <insert id="addManager" >
        insert into user(mName, mPhone, mUsername,role,mPassword)
        values (#{mName},#{mPhone},#{mUsername},#{role},#{mPassword})
    </insert>
    <delete id="delManager">
        delete from user where mId=#{mId}
    </delete>
    <select id="getManagerUpdateId" resultType="com.entity.User">
         select mId,mName,mPhone,mUsername,mPassword,r.name as name from User left join role r on user.role = r.id
       where mId=#{mId}
    </select>
    <update id="updateManager">
        update user set mName=#{mName},mPhone=#{mPhone},
        mUsername=#{mUsername},mPassword=#{mPassword},
        role=#{role}
        where mId=#{mId}
    </update>

    <!--批量删除-->
    <delete id="delBatchesManager"  parameterType = "int">
        delete from user where mId in
        <foreach collection="array"  item="sids" open="(" separator="," close=")"  >
            #{sids}
        </foreach>
    </delete>
    <select id="getmNameManager" resultType="com.entity.User" >
        select mId,mName,mPhone,mUsername,r.name as name from user left join role r on user.role = r.id
        where mName like '%${mName}%' order by mId
    </select>
</mapper>
